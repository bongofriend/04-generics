@startuml
package java.lang {
    
    interface Iterable<T> {
        +iterator(): Iterator<T>
    }

    interface Iterator<T> {
        +hasNext(): boolean
        +next(): T
    }
}

package de.fhro.inf.prg3.a04.collections {
        interface SimpleFilter<T> {
            +include(item: T): boolean
        }

        interface SimpleList<T> extends Iterable {
            +add(item: T)
            +addDefault()
            +size(): int
            +filter(filter: SimpleFilter<T>): SimpleList
        }

        class SimpleListImpl<T> implements SimpleList {
           -head: ListElement
        }

        class SimpleIterator implements Iterator {
        }

        -class ListElement<T> {
            -item: T
            -next: ListElement<T>
    
            +getItem(): T
            +getNext(): ListElement<T>
            +setNext(e: ListElement<T>)
        }

        SimpleListImpl +-- ListElement
        ListElement --* SimpleListImpl
    }
@enduml